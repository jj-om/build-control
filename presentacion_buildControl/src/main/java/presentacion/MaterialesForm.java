/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacion;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Arrays;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author alega
 */
public class MaterialesForm extends javax.swing.JFrame {
    
    private CoordinadorAplicacion coordinador;
    private CoordinadorNegocio coordinadorNegocio;
    
    private DefaultTableModel tableModel;
    private TableRowSorter<DefaultTableModel> tableSorter; // Filtro para la tabla
    private DefaultListModel<String> listModel; // Modelo para la lista
    List<String> materiales;

    /**
     * Creates new form RegistrarMaterialForm
     * @param coordinador
     */
    public MaterialesForm(CoordinadorAplicacion coordinador) {
        initComponents();
        getContentPane().setBackground(java.awt.Color.WHITE);
        this.setLocationRelativeTo(null);
        this.coordinador = coordinador;
        
        listModel = new DefaultListModel<>();
        listBuscador.setModel(listModel);

        tableModel = new DefaultTableModel(new Object[]{"Material", "-", "Cantidad", "+"}, 0);
        tblMateriales.setModel(tableModel);
        tableSorter = new TableRowSorter<>(tableModel);
        tblMateriales.setRowSorter(tableSorter);
        tblMateriales.getColumnModel().getColumn(1).setCellRenderer(new ButtonRenderer()); // Hace que las columnas se vean como botones
        tblMateriales.getColumnModel().getColumn(3).setCellRenderer(new ButtonRenderer());
        tblMateriales.getColumnModel().getColumn(1).setCellEditor(new ButtonEditor(new JCheckBox(), false)); // Botón "-"
        tblMateriales.getColumnModel().getColumn(3).setCellEditor(new ButtonEditor(new JCheckBox(), true));  // Botón "+"
        
        materiales = Arrays.asList("Cemento Portland", "Yeso", "Ladrillo", "Madera", "Acero"); // Ejemplo de materiales precargados
        coordinadorNegocio = CoordinadorNegocio.getInstance();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem3 = new javax.swing.JCheckBoxMenuItem();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        buttonGroup1 = new javax.swing.ButtonGroup();
        nombreEmpresa = new javax.swing.JLabel();
        registrarMaterial = new javax.swing.JLabel();
        btnAtras = new javax.swing.JButton();
        btnSiguiente = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        campoNotas = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblMateriales = new javax.swing.JTable();
        txtBuscadorLista = new javax.swing.JTextField();
        jScrollPaneBuscador = new javax.swing.JScrollPane();
        listBuscador = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        txtFiltroTabla = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(jList1);

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("jCheckBoxMenuItem2");

        jCheckBoxMenuItem3.setSelected(true);
        jCheckBoxMenuItem3.setText("jCheckBoxMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nombreEmpresa.setFont(new java.awt.Font("Segoe UI", 0, 32)); // NOI18N
        nombreEmpresa.setText("BuildControl");

        registrarMaterial.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        registrarMaterial.setText("Registrar material");

        btnAtras.setBackground(new java.awt.Color(95, 168, 211));
        btnAtras.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnAtras.setForeground(new java.awt.Color(255, 255, 255));
        btnAtras.setText("Atrás");
        btnAtras.setBorderPainted(false);
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        btnSiguiente.setBackground(new java.awt.Color(95, 168, 211));
        btnSiguiente.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSiguiente.setForeground(new java.awt.Color(255, 255, 255));
        btnSiguiente.setText("Siguiente");
        btnSiguiente.setBorderPainted(false);
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        campoNotas.setColumns(20);
        campoNotas.setRows(5);
        campoNotas.setPreferredSize(new java.awt.Dimension(212, 64));
        jScrollPane1.setViewportView(campoNotas);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Ingresa el nombre del material:");

        tblMateriales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Material", "-", "Cantidad", "+"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblMateriales);

        txtBuscadorLista.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtBuscadorLista.setForeground(new java.awt.Color(153, 153, 153));
        txtBuscadorLista.setText("Buscar...");
        txtBuscadorLista.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBuscadorListaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBuscadorListaFocusLost(evt);
            }
        });
        txtBuscadorLista.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscadorListaKeyReleased(evt);
            }
        });

        jScrollPaneBuscador.setPreferredSize(new java.awt.Dimension(258, 82));

        listBuscador.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        listBuscador.setMinimumSize(new java.awt.Dimension(13, 20));
        listBuscador.setVisibleRowCount(5);
        listBuscador.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listBuscadorValueChanged(evt);
            }
        });
        jScrollPaneBuscador.setViewportView(listBuscador);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Notas adicionales:");

        txtFiltroTabla.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtFiltroTabla.setForeground(new java.awt.Color(153, 153, 153));
        txtFiltroTabla.setText("Buscar...");
        txtFiltroTabla.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFiltroTablaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFiltroTablaFocusLost(evt);
            }
        });
        txtFiltroTabla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroTablaKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Filtrar por nombre de material:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombreEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(registrarMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtBuscadorLista)
                                .addComponent(jScrollPaneBuscador, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 128, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtFiltroTabla, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3))
                        .addGap(54, 54, 54))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addComponent(jSeparator1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(nombreEmpresa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(registrarMaterial)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFiltroTabla, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscadorLista, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPaneBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        atras();
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        siguiente();
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void txtBuscadorListaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscadorListaKeyReleased
        buscadorListaMateriales();
    }//GEN-LAST:event_txtBuscadorListaKeyReleased

    private void txtBuscadorListaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscadorListaFocusGained
        Utilities.buscadorGanarFoco(txtBuscadorLista, "Buscar...");
    }//GEN-LAST:event_txtBuscadorListaFocusGained

    private void txtBuscadorListaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscadorListaFocusLost
        Utilities.buscadorPerderFoco(txtBuscadorLista, "Buscar...");
    }//GEN-LAST:event_txtBuscadorListaFocusLost

    private void listBuscadorValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listBuscadorValueChanged
        // seleccionarMaterialLista(evt);
        if (!evt.getValueIsAdjusting()) {
            int selectedIndex = listBuscador.getSelectedIndex();
            if (selectedIndex != -1) {
                String selectedMaterial = listBuscador.getSelectedValue();
                boolean materialExists = false;
                for (int i = 0; i < tableModel.getRowCount(); i++) {
                    if (tableModel.getValueAt(i, 0).equals(selectedMaterial)) {
                        materialExists = true;
                        break;
                    }
                }
                if (!materialExists) {
                    tableModel.addRow(new Object[]{selectedMaterial, "-", 1, "+"});
                    coordinadorNegocio.registrarMateriales(selectedMaterial, 1);
                }
            }
        }
    }//GEN-LAST:event_listBuscadorValueChanged

    private void txtFiltroTablaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFiltroTablaFocusGained
        Utilities.buscadorGanarFoco(txtFiltroTabla, "Buscar...");
    }//GEN-LAST:event_txtFiltroTablaFocusGained

    private void txtFiltroTablaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFiltroTablaFocusLost
        Utilities.buscadorPerderFoco(txtFiltroTabla, "Buscar...");
    }//GEN-LAST:event_txtFiltroTablaFocusLost

    private void txtFiltroTablaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroTablaKeyReleased
        filtrarTabla();
    }//GEN-LAST:event_txtFiltroTablaKeyReleased

    // Renderizador para que pueda haber un boton dentro de la tabla, es solo para la apariencia
    class ButtonRenderer extends JButton implements javax.swing.table.TableCellRenderer {

        public ButtonRenderer() {
            setOpaque(true); // Que no sea transparente
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            // Asigna el texto del botón, si es null asigna un texto vacío
            setText((value == null) ? "" : value.toString());
            // Devuelve el botón para mostrarlo en la celda
            return this;
        }
    }

    // Editor de los botones de la tabla, aquí ya se ejecutan acciones cuando le picas
    class ButtonEditor extends DefaultCellEditor {

        private JButton button;
        private boolean isIncrement; // Determina si el botón es para incrementar o decrementar
        private int row;

        public ButtonEditor(JCheckBox checkBox, boolean isIncrement) {
            super(checkBox);
            this.isIncrement = isIncrement;
            
            // Crear el botón con el texto "+" o "-" dependiendo del tipo
            this.button = new JButton(isIncrement ? "+" : "-");
            button.setOpaque(true);
            
            // Acción al hacer clic en el botón
            button.addActionListener(e -> {
                // Obtener la cantidad actual en la tabla
                int cantidad = (int) tableModel.getValueAt(row, 2);
                if (isIncrement) {
                    // Incrementar la cantidad
                    tableModel.setValueAt(cantidad + 1, row, 2);
                    coordinadorNegocio.actualizarCantidadMaterial(row, cantidad + 1);
                } else if (cantidad > 1) {
                    // Decrementar la cantidad
                    tableModel.setValueAt(cantidad - 1, row, 2);
                    coordinadorNegocio.actualizarCantidadMaterial(row, cantidad - 1);
                } else {
                    // Eliminarlo si llega a 0
                    tableModel.removeRow(row);
                    coordinadorNegocio.eliminarMaterial(row);
                    // actualizarListaMateriales(txtBuscadorLista.getText().trim());
                }
                
                // Detiene la edición después de hacer clic, para evitar que solo funcione con doble click
                fireEditingStopped();
            });
        }


        @Override
        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            this.row = row;
            return button; // Mostrar el JButton como el componente de edición
        }

        @Override
        public Object getCellEditorValue() {
            return isIncrement ? "+" : "-"; // Retornar el símbolo correcto
        }
    }
    
    private void seleccionarMaterialLista(ListSelectionEvent evt) {
        Utilities.seleccionarElementoLista(evt, listBuscador, tableModel, false);
    }
    
    private void buscadorListaMateriales() {
        Utilities.buscadorLista(txtBuscadorLista, listModel, jScrollPaneBuscador, materiales, listBuscador);
    }

    // Filtrar y actualizar la lista de materiales
    private void actualizarListaMateriales(String textoBuscador) {
        Utilities.actualizarLista(listBuscador, listModel, materiales, textoBuscador);
    }
    
    private void filtrarTabla() {
        Utilities.filtrarTabla(jTable1, tableSorter, txtFiltroTabla);
    }
    
    private void siguiente() {
        if (tblMateriales.getRowCount() == 0) {
            int opcion = JOptionPane.showConfirmDialog(this,
                    "No se han ingresado materiales, ¿Seguro que desea continuar?",
                    "Confirmar salida", JOptionPane.YES_NO_OPTION);
            if (opcion != JOptionPane.YES_OPTION) {
                return;
            }
        }
        
        this.dispose();
        coordinador.mostrarHerramientasYMaquinaria();
    }
    
    private void atras() {
        this.dispose();
        coordinador.mostrarActividades();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextArea campoNotas;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPaneBuscador;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JList<String> listBuscador;
    private javax.swing.JLabel nombreEmpresa;
    private javax.swing.JLabel registrarMaterial;
    private javax.swing.JTable tblMateriales;
    private javax.swing.JTextField txtBuscadorLista;
    private javax.swing.JTextField txtFiltroTabla;
    // End of variables declaration//GEN-END:variables
}