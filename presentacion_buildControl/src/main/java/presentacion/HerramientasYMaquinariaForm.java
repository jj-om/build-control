/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacion;

import dto.HerramientaIngresadaDTO;
import dto.MaquinariaDTO;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author alega
 */
public class HerramientasYMaquinariaForm extends javax.swing.JFrame {
    
    private CoordinadorAplicacion coordinador;
    private CoordinadorNegocio coordinadorNegocio;
    
    private DefaultTableModel tableModelHerramienta;
    private TableRowSorter<DefaultTableModel> tableSorterHerramienta; // Filtro para la tabla
    private DefaultListModel<String> listModelHerramienta; // Modelo para la lista
    
    private DefaultTableModel tableModelMaquinaria;
    private TableRowSorter<DefaultTableModel> tableSorterMaquinaria; // Filtro para la tabla
    private DefaultListModel<String> listModelMaquinaria; // Modelo para la lista
    
    List<HerramientaIngresadaDTO> herramientas;
    List<String> nombresHerramientas; // Obtiene el nombre de las herramientas
    List<MaquinariaDTO> maquinarias;
    List<String> nombresMaquinarias; //  Se puede obtener directamente el nombre desde el DTO

    /**
     * Creates new form RegistrarHyMForm
     * @param coordinador
     */
    public HerramientasYMaquinariaForm(CoordinadorAplicacion coordinador) {
        initComponents();
        getContentPane().setBackground(java.awt.Color.WHITE);
        this.setLocationRelativeTo(null);
        this.coordinador = coordinador;
        this.coordinadorNegocio = new CoordinadorNegocio();
        
        listModelHerramienta = new DefaultListModel<>();
        listBuscadorH.setModel(listModelHerramienta);
        
        tableModelHerramienta = new DefaultTableModel(new Object[]{"Herramienta", "-", "Cantidad", "+"}, 0);
        tblHerramientas.setModel(tableModelHerramienta);
        tableSorterHerramienta = new TableRowSorter<>(tableModelHerramienta);
        tblHerramientas.setRowSorter(tableSorterHerramienta);
        tblHerramientas.getColumnModel().getColumn(1).setCellRenderer(new HerramientasYMaquinariaForm.ButtonRenderer());
        tblHerramientas.getColumnModel().getColumn(3).setCellRenderer(new HerramientasYMaquinariaForm.ButtonRenderer());
        tblHerramientas.getColumnModel().getColumn(1).setCellEditor(new HerramientasYMaquinariaForm.ButtonEditor(new JCheckBox(), false, tableModelHerramienta, true));
        tblHerramientas.getColumnModel().getColumn(3).setCellEditor(new HerramientasYMaquinariaForm.ButtonEditor(new JCheckBox(), true, tableModelHerramienta, true));
        
        listModelMaquinaria = new DefaultListModel<>();
        listBuscadorM.setModel(listModelMaquinaria);
        
        tableModelMaquinaria = new DefaultTableModel(new Object[]{"Maquinaria", "-", "Status"}, 0);
        tblMaquinaria.setModel(tableModelMaquinaria);
        tableSorterMaquinaria = new TableRowSorter<>(tableModelMaquinaria);
        tblMaquinaria.setRowSorter(tableSorterMaquinaria);
        tblMaquinaria.getColumnModel().getColumn(1).setCellRenderer(new HerramientasYMaquinariaForm.ButtonRenderer());
        tblMaquinaria.getColumnModel().getColumn(1).setCellEditor(new HerramientasYMaquinariaForm.ButtonEditor(new JCheckBox(), false, tableModelMaquinaria, false));
        
        herramientas = coordinadorNegocio.obtenerHerramientas();
        maquinarias = coordinadorNegocio.obtenerMaquinaria();
        obtenerNombreHerramientas();
        obtenerNombreMaquinarias();
        
        buscadorListaHerramientas();
        buscadorListaMaquinaria();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nombreEmpresa = new javax.swing.JLabel();
        registraHyM = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnAtras = new javax.swing.JButton();
        btnSiguiente = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        campoNotas = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblMaquinaria = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblHerramientas = new javax.swing.JTable();
        registraHyM1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtBuscadorListaH = new javax.swing.JTextField();
        jScrollPaneH = new javax.swing.JScrollPane();
        listBuscadorH = new javax.swing.JList<>();
        txtBuscadorListaM = new javax.swing.JTextField();
        jScrollPaneM = new javax.swing.JScrollPane();
        listBuscadorM = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        txtFiltroTablaH = new javax.swing.JTextField();
        txtFiltroTablaM = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nombreEmpresa.setFont(new java.awt.Font("Segoe UI", 0, 32)); // NOI18N
        nombreEmpresa.setText("BuildControl");

        registraHyM.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        registraHyM.setText("Registrar Herramientas");

        btnAtras.setBackground(new java.awt.Color(95, 168, 211));
        btnAtras.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnAtras.setForeground(new java.awt.Color(255, 255, 255));
        btnAtras.setText("Atr√°s");
        btnAtras.setBorderPainted(false);
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        btnSiguiente.setBackground(new java.awt.Color(95, 168, 211));
        btnSiguiente.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSiguiente.setForeground(new java.awt.Color(255, 255, 255));
        btnSiguiente.setText("Siguiente");
        btnSiguiente.setBorderPainted(false);
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Notas adicionales:");

        campoNotas.setColumns(20);
        campoNotas.setRows(5);
        jScrollPane1.setViewportView(campoNotas);

        tblMaquinaria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Maquinaria", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMaquinaria.getTableHeader().setResizingAllowed(false);
        tblMaquinaria.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tblMaquinaria);

        tblHerramientas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Herramienta ", "-", "Cantidad", "+"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHerramientas.getTableHeader().setResizingAllowed(false);
        tblHerramientas.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(tblHerramientas);

        registraHyM1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        registraHyM1.setText("Registrar Maquinaria");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Ingresa el nombre de la herramienta:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Ingresa el nombre de la maquinaria:");

        txtBuscadorListaH.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtBuscadorListaH.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBuscadorListaHFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBuscadorListaHFocusLost(evt);
            }
        });
        txtBuscadorListaH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscadorListaHKeyReleased(evt);
            }
        });

        listBuscadorH.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        listBuscadorH.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listBuscadorH.setVisibleRowCount(5);
        listBuscadorH.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listBuscadorHValueChanged(evt);
            }
        });
        jScrollPaneH.setViewportView(listBuscadorH);

        txtBuscadorListaM.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtBuscadorListaM.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBuscadorListaMFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBuscadorListaMFocusLost(evt);
            }
        });
        txtBuscadorListaM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscadorListaMKeyReleased(evt);
            }
        });

        listBuscadorM.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        listBuscadorM.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listBuscadorM.setVisibleRowCount(5);
        listBuscadorM.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listBuscadorMValueChanged(evt);
            }
        });
        jScrollPaneM.setViewportView(listBuscadorM);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Filtrar por nombre de herramienta:");

        txtFiltroTablaH.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtFiltroTablaH.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFiltroTablaHFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFiltroTablaHFocusLost(evt);
            }
        });
        txtFiltroTablaH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroTablaHKeyReleased(evt);
            }
        });

        txtFiltroTablaM.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtFiltroTablaM.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFiltroTablaMFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFiltroTablaMFocusLost(evt);
            }
        });
        txtFiltroTablaM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroTablaMKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Filtrar por nombre de maquinaria:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPaneM, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombreEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPaneH, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registraHyM)
                    .addComponent(txtBuscadorListaM, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(registraHyM1)
                    .addComponent(jLabel2)
                    .addComponent(txtBuscadorListaH, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtFiltroTablaH, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFiltroTablaM, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(43, 43, 43))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(nombreEmpresa)
                .addGap(18, 18, 18)
                .addComponent(registraHyM)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscadorListaH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFiltroTablaH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPaneH, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(registraHyM1)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel3))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscadorListaM, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPaneM, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtFiltroTablaM, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        atras();
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        siguiente();
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void txtBuscadorListaHFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscadorListaHFocusGained
        Utilities.buscadorGanarFoco(txtBuscadorListaH, "Buscar...");
    }//GEN-LAST:event_txtBuscadorListaHFocusGained

    private void txtBuscadorListaHFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscadorListaHFocusLost
        Utilities.buscadorPerderFoco(txtBuscadorListaH, "Buscar...");
    }//GEN-LAST:event_txtBuscadorListaHFocusLost

    private void txtBuscadorListaHKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscadorListaHKeyReleased
        buscadorListaHerramientas();
    }//GEN-LAST:event_txtBuscadorListaHKeyReleased

    private void listBuscadorHValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listBuscadorHValueChanged
        seleccionarHerramientaLista(evt);
    }//GEN-LAST:event_listBuscadorHValueChanged

    private void txtBuscadorListaMFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscadorListaMFocusGained
        Utilities.buscadorGanarFoco(txtBuscadorListaM, "");
    }//GEN-LAST:event_txtBuscadorListaMFocusGained

    private void txtBuscadorListaMFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscadorListaMFocusLost
        Utilities.buscadorPerderFoco(txtBuscadorListaM, "");
    }//GEN-LAST:event_txtBuscadorListaMFocusLost

    private void txtBuscadorListaMKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscadorListaMKeyReleased
        buscadorListaMaquinaria();
    }//GEN-LAST:event_txtBuscadorListaMKeyReleased

    private void listBuscadorMValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listBuscadorMValueChanged
        seleccionarMaquinariaLista(evt);
    }//GEN-LAST:event_listBuscadorMValueChanged

    private void txtFiltroTablaHFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFiltroTablaHFocusGained
        Utilities.buscadorGanarFoco(txtFiltroTablaH, "");
    }//GEN-LAST:event_txtFiltroTablaHFocusGained

    private void txtFiltroTablaHFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFiltroTablaHFocusLost
        Utilities.buscadorPerderFoco(txtFiltroTablaH, "");
    }//GEN-LAST:event_txtFiltroTablaHFocusLost

    private void txtFiltroTablaHKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroTablaHKeyReleased
        filtrarTablaHerramientas();
    }//GEN-LAST:event_txtFiltroTablaHKeyReleased

    private void txtFiltroTablaMFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFiltroTablaMFocusGained
        Utilities.buscadorGanarFoco(txtFiltroTablaM, "");
    }//GEN-LAST:event_txtFiltroTablaMFocusGained

    private void txtFiltroTablaMFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFiltroTablaMFocusLost
        Utilities.buscadorPerderFoco(txtFiltroTablaM, "");
    }//GEN-LAST:event_txtFiltroTablaMFocusLost

    private void txtFiltroTablaMKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroTablaMKeyReleased
        filtrarTablaMaquinaria();
    }//GEN-LAST:event_txtFiltroTablaMKeyReleased

    class ButtonRenderer extends JButton implements javax.swing.table.TableCellRenderer {

        public ButtonRenderer() {
            setOpaque(true); // que no sea transparente
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            // Asigna el texto del bot√≥n, si es null asigna un texto vac√≠o
            setText((value == null) ? "" : value.toString());
            // Devuelve el bot√≥n para mostrarlo en la celda
            return this;
        }
    }
    
    class ButtonEditor extends DefaultCellEditor {

        private JButton button;
        private boolean isIncrement;
        private int row;
        private DefaultTableModel tableModel;
        private boolean esHerramienta;  // Para determinar qu√© lista actualizar

        public ButtonEditor(JCheckBox checkBox, boolean isIncrement, DefaultTableModel tableModel, boolean esHerramienta) {
            super(checkBox);
            this.isIncrement = isIncrement;
            this.tableModel = tableModel;
            this.esHerramienta = esHerramienta; // Guardamos si es para herramientas o maquinaria

            // Crear el bot√≥n con el texto "+" o "-" dependiendo del tipo
            this.button = new JButton(isIncrement ? "+" : "-");
            button.setOpaque(true);

            // Acci√≥n al hacer clic en el bot√≥n
            button.addActionListener(e -> {
                if (esHerramienta) {
                    // Si es herramienta, manejamos las cantidades
                    int cantidad = (int) tableModel.getValueAt(row, 2);
                    if (isIncrement) {
                        // Incrementar la cantidad
                        tableModel.setValueAt(cantidad + 1, row, 2);
                    } else if (cantidad > 1) {
                        // Decrementar la cantidad
                        tableModel.setValueAt(cantidad - 1, row, 2);
                    } else {
                        // Eliminarlo si llega a 0
                        tableModel.removeRow(row);
                        actualizarListaHerramientas(txtBuscadorListaH.getText().trim());
                    }
                } else {
                    // Si es maquinaria, solo eliminamos la fila
                    tableModel.removeRow(row);
                    actualizarListaMaquinaria(txtBuscadorListaM.getText().trim());
                }
            });

        }

        @Override
        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            this.row = row;
            return button; // Mostrar el JButton como el componente de edici√≥n
        }

        @Override
        public Object getCellEditorValue() {
            return isIncrement ? "+" : "-"; // Retornar el s√≠mbolo correcto
        }
    }
    
    // Comportamiento del buscador de herramientas
    private void buscadorListaHerramientas() {
        Utilities.buscadorLista(txtBuscadorListaH, listModelHerramienta, jScrollPaneH, nombresHerramientas, listBuscadorH);
    }
    
    // Filtrar y actualizar la lista de materiales
    private void actualizarListaHerramientas(String textoBuscador) {
        Utilities.actualizarLista(listBuscadorH, listModelHerramienta, nombresHerramientas, textoBuscador);
    }
    
    private void seleccionarHerramientaLista(ListSelectionEvent evt) {
        Utilities.seleccionarElementoLista(evt, listBuscadorH, tableModelHerramienta, false);
    }
    
    private void filtrarTablaHerramientas() {
        Utilities.filtrarTabla(tblHerramientas, tableSorterHerramienta, txtFiltroTablaH);
    }
    
    private void buscadorListaMaquinaria() {
        Utilities.buscadorLista(txtBuscadorListaM, listModelMaquinaria, jScrollPaneM, nombresMaquinarias, listBuscadorM);
    }
    
    // Filtrar y actualizar la lista de materiales
    private void actualizarListaMaquinaria(String textoBuscador) {
        Utilities.actualizarLista(listBuscadorM, listModelMaquinaria, nombresMaquinarias, textoBuscador);
    }
    
    private void seleccionarMaquinariaLista(ListSelectionEvent evt) {
        Utilities.seleccionarElementoLista(evt, listBuscadorM, tableModelMaquinaria, true);
    }
    
    private void filtrarTablaMaquinaria() {
        Utilities.filtrarTabla(tblMaquinaria, tableSorterMaquinaria, txtFiltroTablaM);
    }
    
    // Obtiene el nombre de las herramientas
    private void obtenerNombreHerramientas() {
        nombresHerramientas = new ArrayList<>();
        for (HerramientaIngresadaDTO herramientaIngresada : herramientas) {
            nombresHerramientas.add(herramientaIngresada.getHerramienta().getNombre());
        }
    }
    // Obtiene el nombre de la maquinaria
    private void obtenerNombreMaquinarias() {
        nombresMaquinarias = new ArrayList<>();
        for (MaquinariaDTO maquinaria : maquinarias) {
            nombresMaquinarias.add(maquinaria.getNombre());
        }
    }
    
    private List<HerramientaIngresadaDTO> crearDTOHerramienta() {
        List<HerramientaIngresadaDTO> herramientaIngresada = new ArrayList<>();
        return herramientaIngresada;
    }
    
    private List<MaquinariaDTO> crearDTOMaquinaria() {
        List<MaquinariaDTO> maquinariaIngresada = new ArrayList<>();
        return maquinariaIngresada;
    }
    
    private void siguiente() {
        if (tblHerramientas.getRowCount() == 0 || tblMaquinaria.getRowCount() == 0) {
            int opcion = JOptionPane.showConfirmDialog(this,
                    "No se han registrado herramientas o maquinaria, ¬øSeguro que desea continuar?",
                    "Confirmar salida", JOptionPane.YES_NO_OPTION);
            if (opcion != JOptionPane.YES_OPTION) {
                return;
            } else {
                List<HerramientaIngresadaDTO> herramientaIngresada = crearDTOHerramienta();
                List<MaquinariaDTO> maquinariaIngresada = crearDTOMaquinaria();
                
                boolean herramientasGuardadas = coordinadorNegocio.registrarHerramientas(herramientaIngresada);
                boolean maquinariasGuardadas = coordinadorNegocio.guardarMaquinaria(maquinariaIngresada);
                
                if (!herramientasGuardadas || !maquinariasGuardadas) {
                    JOptionPane.showMessageDialog(this, "No fue posible registrar las herramientas/maquinarias.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
        }
        
        this.dispose();
        coordinador.mostrarPersonal();
    }
    
    private void atras() {
        this.dispose();
        coordinador.mostrarMateriales();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JTextArea campoNotas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPaneH;
    private javax.swing.JScrollPane jScrollPaneM;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList<String> listBuscadorH;
    private javax.swing.JList<String> listBuscadorM;
    private javax.swing.JLabel nombreEmpresa;
    private javax.swing.JLabel registraHyM;
    private javax.swing.JLabel registraHyM1;
    private javax.swing.JTable tblHerramientas;
    private javax.swing.JTable tblMaquinaria;
    private javax.swing.JTextField txtBuscadorListaH;
    private javax.swing.JTextField txtBuscadorListaM;
    private javax.swing.JTextField txtFiltroTablaH;
    private javax.swing.JTextField txtFiltroTablaM;
    // End of variables declaration//GEN-END:variables
}
